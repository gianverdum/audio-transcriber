[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "audio-transcriber"
version = "1.0.0"
description = "Tool for audio transcription using OpenAI API, generating organized Excel spreadsheets"
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
authors = [
    { name = "Audio Transcriber Team", email = "team@audiotranscriber.com" },
]
keywords = ["audio", "transcription", "openai", "whisper", "excel", "pandas", "mcp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Office/Business",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "openai>=1.0.0",
    "pandas>=1.5.0",
    "openpyxl>=3.0.0",
    "python-dotenv>=1.0.1",
    "fastapi>=0.116.1",
    "uvicorn[standard]>=0.33.0",
    "pydantic-settings>=2.8.1",
    "boto3>=1.37.38",
    "mangum>=0.19.0",
    "python-multipart>=0.0.20",
    "mcp>=1.13.0",
    "httpx>=0.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
audio-transcriber = "audio_transcriber.cli:main"
audio-transcriber-server = "audio_transcriber.api.main:run_local"
audio-transcriber-mcp = "audio_transcriber.mcp.server:main_sync"
audio-transcriber-mcp-http = "audio_transcriber.mcp.http_server:main"

[project.urls]
Homepage = "https://github.com/usuario/audio-transcriber"
Documentation = "https://github.com/usuario/audio-transcriber#readme"
Repository = "https://github.com/usuario/audio-transcriber.git"
"Bug Tracker" = "https://github.com/usuario/audio-transcriber/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/audio_transcriber"]

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
src_paths = ["src", "tests"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "openpyxl.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--verbose --cov=src --cov-report=html --cov-report=term-missing"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "black>=24.8.0",
    "flake8>=5.0.4",
    "isort>=5.13.2",
    "mypy>=1.14.1",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "requests>=2.32.4",
]
